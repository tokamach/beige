%PDF-1.3
%‚„œ”
2 0 obj
<<
/Length 4665
>>
stream
BT
/TT2 1 Tf
10 0 0 10 303.5 36 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(1)Tj
/TT4 1 Tf
18 0 0 18 126.9 708 Tm
(The Persistent Relevance of IPC Performance:)Tj
0.0572 -1.3333 TD
[(New T)93.5(echniques for Reducing the IPC Penalty)]TJ
/TT2 1 Tf
12 0 0 12 161.72 652 Tm
[(W)40.5(ilson C. Hsieh, M. Frans Kaashoek, and W)49.2(illiam E. W)81(eihl)]TJ
/TT6 1 Tf
10 0 0 10 225.23 633.33 Tm
({wchsieh, kaashoek, weihl}@lcs.mit.edu)Tj
0.332 -1.2 TD
(MIT Laboratory for Computer Science)Tj
-11.335 -2.4 TD
0.047 Tw
[(Although ther)39.3(e have been substantial impr)43(ovements in IPC performance \(in particular)118.7(, r)38.2(ound-)]TJ
0 -1.2 TD
-0.01 Tw
[(trip IPC time\) in r)41.3(ecent years, further r)40.4(eduction of the IPC penalty is still important for parallel)]TJ
T*
0.037 Tw
[(applications and micr)41.3(okernel-based operating systems. W)99.4(e)0( describe a number of new softwar)45.4(e)]TJ
T*
0.01 Tw
[(and har)38.2(dwar)38.2(e techniques that we ar)39.9(e investigating for r)39(educing various components of the IPC)]TJ
T*
0 Tw
[(penalty)56.4(.)]TJ
/TT4 1 Tf
12 0 0 12 72 518 Tm
[(1.    Intr)19.7(oduction)]TJ
/TT2 1 Tf
10 0 0 10 105.98 497.33 Tm
0.11 Tw
(Interprocess communication \(IPC\) is a valuable mechanism for structuring complex systems, as it allows)Tj
-3.398 -1.6 TD
0.01 Tw
(systems to be decomposed into separate protection domains. In addition to being a good structuring mechanism, IPC)Tj
T*
0.017 Tw
(is a fundamental primitive in distributed and parallel computing; the performance of distributed systems and parallel)Tj
T*
0 Tw
(programs is often determined by the performance of IPC primitives.)Tj
3.398 -1.6 TD
0.098 Tw
(Recent research has shown how to lower the cost of a round-trip IPC [Bershad et al. 1989, Druschel and)Tj
-3.398 -1.6 TD
0.035 Tw
[(Peterson 1992, Johnson and Zwaenepoel 1993, Kar)26.3(ger 1989]. For example, a local RPC can be performed in 7.7)]TJ
/TT8 1 Tf
45.835 0 TD
0 Tw
(µ)Tj
/TT2 1 Tf
0.576 0 TD
(s)Tj
-46.411 -1.6 TD
0.074 Tw
[(\(254 cycles on a 33 MHz 486\) [Y)104.7(arvin et al. 1993], an RPC across an Ethernet can be performed in 340)]TJ
/TT8 1 Tf
43.18 0 TD
0 Tw
(µ)Tj
/TT2 1 Tf
0.575 0 TD
0.074 Tw
(s \(8800)Tj
-43.755 -1.6 TD
0.038 Tw
[(cycles on a 25 MHz MIPS\) [Thekkath and Levy 1993], and an RPC across an A)124.8(TM link can be performed in 93)]TJ
/TT8 1 Tf
45.835 0 TD
0 Tw
(µ)Tj
/TT2 1 Tf
0.576 0 TD
(s)Tj
-46.411 -1.6 TD
0.074 Tw
(\(2300 cycles on a 25 MHz MIPS\) [Thekkath et al. 1993]. These numbers are remarkable compared to IPC perfor-)Tj
T*
0 Tw
(mance in previous systems.)Tj
3.398 -1.6 TD
0.051 Tw
[(Although round-trip IPC time has improved dramatically)75.1(, the IPC penalty is still signi)]TJ
/TT9 1 Tf
34.9495 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.051 Tw
(cant, particularly in)Tj
-38.9036 -1.6 TD
-0.022 Tw
(parallel applications and microkernel-based operating systems; we want to reduce the IPC penalty so that it is as close)Tj
T*
-0.008 Tw
(as possible to that of performing a procedure call. In Section 2 we discuss why IPC performance is important. In Sec-)Tj
T*
0 Tw
[(tion 3 we outline our ideas for reducing the IPC penalty)74.5(, and in Section 4 we summarize our conclusions.)]TJ
/TT4 1 Tf
12 0 0 12 72 254 Tm
[(2.    Why IPC performance is r)25.1(elevant)]TJ
/TT2 1 Tf
10 0 0 10 105.98 233.33 Tm
0.005 Tw
(There are several reasons why IPC performance is important, and why further research is needed to improve)Tj
-3.398 -1.6 TD
-0.017 Tw
[(it. V)110.8(arious trends are causing IPC to be used more frequently; in addition, research in other areas is reducing the over-)]TJ
T*
0 Tw
(head of other system bottlenecks. In this section we discuss these issues in detail.)Tj
/TT4 1 Tf
3.398 -2.2 TD
0.163 Tw
[(Parallel computing r)21(equir)18.8(es high-performance IPC.)]TJ
/TT2 1 Tf
22.742 0 TD
[( First, workstation clusters are increasingly being)]TJ
-26.14 -1.6 TD
0.016 Tw
[(used for parallel computing, since they are more cost-ef)27.9(fective than custom multicomputers. Unfortunately)73.8(, IPC per-)]TJ
T*
-0.001 Tw
[(formance in clusters is at least an order of magnitude worse than in custom multicomputers. T)83.1(o)0( make distributed sys-)]TJ
T*
0 Tw
(tems as attractive as parallel computers, a dramatic improvement in IPC performance is needed.)Tj
3.398 -1.6 TD
0.035 Tw
[(Second, parallel computers are being used more widely)77.2(. Although inter)23.4(-thread communication performance)]TJ
-3.398 -1.6 TD
0.064 Tw
(in custom parallel computers is very good, most multicomputers do not support multiprogramming well. As multi-)Tj
T*
0.009 Tw
(computers become more widespread, users will demand that applications be protected from each other; this will lead)Tj
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
12 0 obj
<<
/Length 6082
>>
stream
BT
/TT2 1 Tf
10 0 0 10 303.5 36 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(2)Tj
-23.15 67.733 TD
-0.011 Tw
[(to the addition of virtual memory \(or at least virtual address spaces\) to multicomputers. If it is not done carefully)78.5(, IPC)]TJ
0 -1.6 TD
0 Tw
[(performance may be an order of magnitude more expensive than inter)31.1(-thread communication.)]TJ
/TT4 1 Tf
3.398 -2.2 TD
0.001 Tw
(IPC performance limits the decomposition of operating systems.)Tj
/TT2 1 Tf
27.324 0 TD
( Many production operating systems are)Tj
-30.722 -1.6 TD
0.015 Tw
[(structured around microkernels: e.g., Amoeba [T)78.8(anenbaum et al. 1991], Chorus [Rozier et al. 1988], Mach 3.0 [Acc-)]TJ
T*
0.012 Tw
[(etta et al. 1986], W)44.6(indows NT [Custer 1993], and QNX [Hildebrand 1992]. IPC performance is not yet good enough)]TJ
T*
-0.001 Tw
(for these microkernels. For example, Mach 3.0 is often slower than Mach 2.5, which has a monolithic kernel [Ander-)Tj
T*
0 Tw
[(son et al. 1991]; this performance dif)24.3(ference is primarily due to the cost of more frequent IPC.)]TJ
3.398 -1.6 TD
0.125 Tw
[( Several of the above operating systems avoid IPC because of its expense: Chorus allows services to be)]TJ
-3.398 -1.6 TD
0.094 Tw
(loaded into the kernel; Mach 3.0 has migrated some of the AFS cache manager back into the kernel [Nagle et al.)Tj
T*
0.011 Tw
(1993]; the Amoeba )Tj
/TT9 1 Tf
8.0032 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.011 Tw
(le server is usually con)Tj
/TT9 1 Tf
9.2081 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.011 Tw
[(gured to run in the kernel; W)48(indows NT runs only non-critical services)]TJ
-18.3236 -1.6 TD
0.122 Tw
[(outside of the kernel. Others have ar)24.5(gued that some server functions should be executed in client address spaces)]TJ
T*
0.125 Tw
(through the use of libraries [Bershad 1992], or that )Tj
/TT9 1 Tf
21.6753 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.125 Tw
(le systems should be in the kernel for performance reasons)Tj
-22.2314 -1.6 TD
-0.014 Tw
[([W)80.9(elch 1991]. W)83.4(e)0( believe that IPC should not be avoided: if IPC performance were more ef)]TJ
/TT9 1 Tf
36.522 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
-0.014 Tw
[(cient, we could af)22.1(ford to)]TJ
-37.0782 -1.6 TD
0 Tw
(leave server functions in their own address spaces.)Tj
/TT4 1 Tf
3.398 -2.2 TD
0.053 Tw
[(Device latency can be r)22.1(educed or hidden.)]TJ
/TT2 1 Tf
17.762 0 TD
[( Some have ar)20.4(gued that device latencies are a lar)22(ger bottleneck)]TJ
-21.16 -1.6 TD
-0.025 Tw
(than round-trip IPC time [Bershad 1992]. Current IPC mechanisms may be fast compared to devices, but the IPC pen-)Tj
T*
0.045 Tw
(alty is still comparable to device access times; given the research trends in reducing or hiding the latencies of com-)Tj
T*
0.17 Tw
[(monly accessed devices, this should remain true even as processors get faster)69.9(. W)80.8(e)0( will examine two examples,)]TJ
T*
0 Tw
(networks and disks.)Tj
3.398 -1.6 TD
0.068 Tw
[(Networks are getting faster; this is being driven by the conver)28.3(gence of parallel and distributed systems. In)]TJ
-3.398 -1.6 TD
0.012 Tw
(custom multiprocessors a great deal of money is invested in making networks fast [Agarwal et al. 1991, Leiserson et)Tj
T*
-0.008 Tw
(al. 1992]: network delays are on the order of a few tens of processor cycles. Mapping the hardware interface into reg-)Tj
T*
-0.022 Tw
[(isters or user space [Henry and Joer)23.5(g 1992, Dally et al. 1991, Leiserson et al. 1992] can further lower the cost of send-)]TJ
T*
0.079 Tw
(ing messages. In distributed systems, network performance is approaching the performance of networks in custom)Tj
T*
0.005 Tw
[(multiprocessors. For example, the Fore A)117.7(TM network interface \(which can be mapped into user space\) can transfer a)]TJ
T*
0 Tw
(53-byte cell in 25 microseconds [Biagioni et al. 1993].)Tj
3.398 -1.6 TD
0.047 Tw
[(Although raw disk access times are not improving considerably)77.5(, the latency of disk accesses can be hidden)]TJ
-3.398 -1.6 TD
-0.001 Tw
[(quite ef)18.4(fectively)66(. Recent advances in )]TJ
/TT9 1 Tf
14.9037 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
-0.001 Tw
[(le system or)23.4(ganization \(e.g., log-structured )]TJ
/TT9 1 Tf
17.3554 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
-0.001 Tw
(le systems [Rosenblum and Oust-)Tj
-33.3714 -1.6 TD
-0.016 Tw
(erhout 1992]\) allow data to be transferred to the )Tj
/TT9 1 Tf
19.2657 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
-0.016 Tw
(le system at rates near the maximum bandwidth of the disk. In addi-)Tj
-19.8218 -1.6 TD
0.042 Tw
(tion, the constantly decreasing price of RAM \(current prices range from $35 to $65 per megabyte\) will increase the)Tj
T*
-0.016 Tw
(size of )Tj
/TT9 1 Tf
2.8557 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
-0.016 Tw
[(le caches, which will help to hide disk latency)72(. Finally)66.5(, the increasing use of non-volatile RAM, which is also)]TJ
-3.4118 -1.6 TD
0 Tw
[(becoming steadily cheaper)44.1(, will hide the latency of disks even more ef)24.6(fectively [Baker et al. 1992].)]TJ
/TT4 1 Tf
3.398 -2.2 TD
0.022 Tw
(IPC latency cannot always be hidden.)Tj
/TT2 1 Tf
16.104 0 TD
[( Some might ar)20.2(gue that IPC performance is unimportant because its)]TJ
-19.502 -1.6 TD
0.033 Tw
(cost can often be hidden by overlapping it with other computation. First, it is impossible to hide the latency of local)Tj
T*
0.014 Tw
(IPC. Although it is possible to hide some of the latency of remote IPC, the primary cost of IPC is in software, which)Tj
T*
0.033 Tw
(cannot be hidden. Second, none of the IPCs on the critical path of an application can be hidden: latency hiding may)Tj
T*
0.025 Tw
(increase the throughput of a system, but it will not reduce the length of the critical path. Third, there may be insuf)Tj
/TT9 1 Tf
45.911 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
(-)Tj
-46.4672 -1.6 TD
0.006 Tw
[(cient parallelism available to hide IPC latency; this depends on the system and the applications. Finally)73.1(, even if there)]TJ
T*
0 Tw
(were suf)Tj
/TT9 1 Tf
3.395 0 TD
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
(cient parallelism, a great deal of network bandwidth would be required to support it.)Tj
ET
endstream
endobj
13 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
15 0 obj
<<
/Length 5270
>>
stream
BT
/TT2 1 Tf
10 0 0 10 303.5 36 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(3)Tj
/TT4 1 Tf
12 0 0 12 72 712 Tm
(3.    How to make IPC faster)Tj
/TT2 1 Tf
10 0 0 10 105.98 691.3301 Tm
-0.01 Tw
(In this section we describe our ideas for reducing the overhead involved with using IPC, which includes con-)Tj
-3.398 -1.6 TD
0.089 Tw
[(text switching, cache and TLB penalties, authorization and authentication, and control transfer)73.6(. Some have ar)22.4(gued)]TJ
T*
0.064 Tw
(that some of the above overheads, such as cache penalties, are more severe bottlenecks than simple round-trip IPC)Tj
T*
0.014 Tw
[(time [Bershad 1992]. W)85.1(e)0( agree that cache penalties are certainly important bottlenecks, but we believe that all of the)]TJ
T*
0 Tw
[(bottlenecks on the IPC path should be reduced together)64.5(.)]TJ
/TT4 1 Tf
3.398 -2.2 TD
0.16 Tw
[(Manage the memory hierar)23.1(chy in softwar)21.2(e.)]TJ
/TT2 1 Tf
19.25 0 TD
[( The memory hierarchy does not always handle memory-)]TJ
-22.648 -1.6 TD
0.004 Tw
(mapped devices ef)Tj
/TT9 1 Tf
7.427 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.004 Tw
[(ciently)65.3(. For example, network communication does not exhibit locality of reference: data in mes-)]TJ
-7.9832 -1.6 TD
0.143 Tw
[(sages are often accessed only once. Such data is currently cached automatically)79.2(, which causes cache lines to be)]TJ
T*
0 Tw
(wasted. It would be more ef)Tj
/TT9 1 Tf
11.14 0 TD
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
(cient if there were mechanisms to avoid caching such references.)Tj
-8.2982 -1.6 TD
0.069 Tw
[(W)79.8(e)0( are also exploring prefetching for reducing the cache and TLB penalties involved with IPC. There has)]TJ
-3.398 -1.6 TD
0.024 Tw
(been a great deal of research in cache prefetching for single applications \(for example, [Mowry et al. 1992]\), but we)Tj
T*
0.076 Tw
[(have not seen any work in prefetching across IPCs; similarly)77.8(, there has been research in decreasing TLB penalties)]TJ
T*
0.069 Tw
(\(for example, [Nagle et al. 1993]\), but to the best of our knowledge no one has proposed prefetching for the TLB.)Tj
T*
0.102 Tw
(Some architectures manage TLBs in software \(e.g., MIPS [Kane and Heinrich 1992]\); since the IPC path already)Tj
T*
0.007 Tw
(goes through the kernel, prefetching TLB entries on such architectures should be straightforward. Since the IPC path)Tj
T*
0.014 Tw
(is often predictable, it also should be straightforward to determine what cache and TLB entries to prefetch; we could)Tj
T*
0 Tw
(use kernel-code synthesis [Pu et al. 1988] when the path is unpredictable.)Tj
3.398 -1.6 TD
-0.024 Tw
[(Finally)65.5(, the compiler can reduce context switching costs by managing register saves and restores across IPCs.)]TJ
-3.398 -1.6 TD
0.094 Tw
[(Kar)19(ger has proposed that a trusted linker be used to minimize saves and restores between domains that trust each)]TJ
T*
-0.002 Tw
[(other [Kar)20.7(ger 1989]. W)82.7(e)0( believe that more optimizations are possible for the compiler: for example, the compiler can)]TJ
T*
0 Tw
(hoist register saves and restores out of loops.)Tj
/TT4 1 Tf
3.398 -2.2 TD
0.09 Tw
(Generalize Active Messages.)Tj
/TT2 1 Tf
12.254 0 TD
[( An Active Message [von Eicken et al. 1992] runs user code directly inside)]TJ
-15.652 -1.6 TD
0.077 Tw
(network interrupt handlers; it is a very ef)Tj
/TT9 1 Tf
16.873 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.077 Tw
(cient communication mechanism that eliminates the costs of thread cre-)Tj
-17.4291 -1.6 TD
0.002 Tw
(ation, scheduling, and context switching. Active Messages are suitable for current multiprocessors, most of which do)Tj
T*
-0.011 Tw
[(not support separate protection domains. W)85.9(e)0( are extending the Active Messages techniques for IPC so that communi-)]TJ
T*
0 Tw
(cation across protection domains is cheaper in parallel systems.)Tj
3.398 -1.6 TD
-0.013 Tw
[(W)79.8(e)0( are also extending Active Messages for use in multithreaded systems. First, we are studying how compil-)]TJ
-3.398 -1.6 TD
0.009 Tw
(ers can determine which procedures can safely execute as Active Messages; Active Messages that block on a lock or)Tj
T*
0.063 Tw
[(that execute for too long would cause serious problems. W)85.7(e)0( are also investigating an approach we call ìOptimistic)]TJ
T*
0.02 Tw
(Active Messages,î in which most message handlers execute as Active Messages; if the handlers block or run for too)Tj
T*
0.054 Tw
(long, which we expect to be uncommon, new threads are started for them. Using this approach, short non-blocking)Tj
T*
0 Tw
(IPCs always execute as Active Messages, and blocking or long IPCs do not cause problems.)Tj
/TT4 1 Tf
3.398 -2.2 TD
0.079 Tw
(Support gang scheduling in distributed systems.)Tj
/TT2 1 Tf
20.832 0 TD
[( Many parallel applications perform signi)]TJ
/TT9 1 Tf
16.9736 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.079 Tw
(cantly better)Tj
-41.7598 -1.6 TD
-0.01 Tw
(when components of the application run at the same time: processes that communicate frequently incur fewer context)Tj
T*
-0.022 Tw
(switches if they are gang scheduled. Such an approach involves changing network interfaces and operating systems in)Tj
T*
0.013 Tw
(distributed systems, and is the approach taken in the CM-5 [Leiserson et al. 1992], which provides hardware support)Tj
T*
0 Tw
(in the network for gang scheduling.)Tj
ET
endstream
endobj
16 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
18 0 obj
<<
/Length 6104
>>
stream
BT
/TT2 1 Tf
10 0 0 10 303.5 36 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(4)Tj
/TT4 1 Tf
-19.752 67.733 TD
0.169 Tw
[(Adapt multithr)22.3(eading support for multipr)25.1(ogramming.)]TJ
/TT2 1 Tf
23.821 0 TD
[( The Alewife multiprocessor provides multiple)]TJ
-27.219 -1.6 TD
0.002 Tw
(register sets to enable fast switching of threads in a single address space [Agarwal et al. 1991]. Others have proposed)Tj
T*
0.105 Tw
[(using multiple register sets for fast context switching [Kar)29.5(ger 1989], which would improve IPC performance; the)]TJ
T*
0.028 Tw
[(SP)93.3(ARC V)112.3(ersion 9 architecture allows register windows to be used for fast context switching [SP)101.2(ARC 1992]. W)82(e)0( are)]TJ
T*
0.008 Tw
(examining how various ideas for improving the performance of multithreaded processors by reducing context switch)Tj
T*
0.148 Tw
(costs and increasing utilization of register )Tj
/TT9 1 Tf
17.8275 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.148 Tw
(les can be adapted to improve IPC performance. Register relocation)Tj
-18.3836 -1.6 TD
0.043 Tw
[([W)80.9(aldspur)18.8(ger and W)83.6(eihl 1993] and the Named State Processor [Nuth and Dally 1991] are mechanisms for allowing)]TJ
T*
-0.017 Tw
[(threads to use a lar)21.1(ge register )]TJ
/TT9 1 Tf
11.8164 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
(le )Tj
/TT9 1 Tf
0.9547 0 TD
(ﬂ)Tj
/TT2 1 Tf
0.5562 0 TD
-0.017 Tw
(exibly; register dribbling [Soundararajan 1992] makes uses of excess bandwidth to)Tj
-13.8834 -1.6 TD
0.188 Tw
(memory to overlap computation and register saving. Extensions of these mechanisms for use across protection)Tj
T*
0 Tw
(domains should be equally useful in multiprogrammed architectures.)Tj
/TT4 1 Tf
3.398 -2.2 TD
0.111 Tw
[(Change network interfaces to support pr)29.5(otection in hardwar)22.8(e.)]TJ
/TT2 1 Tf
27.278 0 TD
[( The kernel currently authenticates and)]TJ
-30.676 -1.6 TD
0.004 Tw
[(authorizes every IPC invocation. W)87.3(e)0( propose having the sending network interface authenticate messages by tagging)]TJ
T*
0.041 Tw
(them with process identi)Tj
/TT9 1 Tf
9.9267 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.041 Tw
(ers that are set up at binding time, and having these identi)Tj
/TT9 1 Tf
23.5003 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
0.041 Tw
(ers authorized in the receiving)Tj
-34.5393 -1.6 TD
0.002 Tw
(network interface. Adding hardware in the form of special instructions may also be applicable to reducing the cost of)Tj
T*
0 Tw
[(local IPC [Kar)20.5(ger 1989]; if possible, we would like to be able to eliminate the kernel from the IPC path.)]TJ
/TT4 1 Tf
12 0 0 12 72 448 Tm
(4.    Conclusions)Tj
/TT2 1 Tf
10 0 0 10 105.98 427.33 Tm
0.003 Tw
(Although round-trip IPC costs have been reduced dramatically in recent years, factors such as the increasing)Tj
-3.398 -1.6 TD
0.023 Tw
[(proliferation of microkernel-based operating systems still make IPC performance relevant. W)90.8(e)0( have outlined several)]TJ
T*
0.049 Tw
(new software and hardware techniques for reducing the IPC penalty even further: manage the memory hierarchy in)Tj
T*
0.104 Tw
(software, generalize Active Messages, support gang scheduling in distributed systems, adapt multiprocessor hard-)Tj
T*
0 Tw
(ware ideas for reducing context switch costs, and support protection in network interfaces.)Tj
/TT4 1 Tf
12 0 0 12 72 328 Tm
(Acknowledgments)Tj
/TT2 1 Tf
10 0 0 10 105.98 309.33 Tm
0.066 Tw
[(W)79.8(e)0( would like to thank Henri Bal, Eric Brewer)48.8(, Bob Gruber)44(, Ulana Legedza, Brad Spiers, and Carl W)88.1(ald-)]TJ
-3.398 -1.6 TD
0 Tw
[(spur)19.2(ger for their comments on various drafts of this paper)65(.)]TJ
/TT4 1 Tf
12 0 0 12 72 258 Tm
[(Refer)19.2(ences)]TJ
/TT2 1 Tf
9 0 0 9 72 240 Tm
[(Accetta, M.J., Baron, R.V)142.3(., Bolosky)70.7(, W)93.8(., Golub, D.B., Rashid, R.F)95.7(., T)71.9(evanian, Jr)60.4(., A., and Y)106(oung, M.W)98.6(., ìMach: A New Kernel)]TJ
2.4 -1.2222 TD
(Foundation for UNIX Development,î)Tj
/TT6 1 Tf
15.2811 0 TD
[(Pr)37.8(oc. Summer 1986 USENIX Confer)56.2(ence)]TJ
/TT2 1 Tf
16.4289 0 TD
[(, pp. 93-1)43(13, Jul. 1986.)]TJ
-34.11 -1.6667 TD
-0.0278 Tw
(Agarwal, A., Chaiken, D., DíSouza, G., Johnson, K., Kranz, D., Kubiatowicz, J., Kurihara, K., Lim, B.H., Maa, G., Nussbaum, D.,)Tj
2.4 -1.2222 TD
0 Tw
[(Parkin, D., and Y)110.1(eung, D., ìThe MIT Alewife Machine: A Lar)41.2(ge-Scale Distributed-Memory Multiprocessor)64.5(,î)]TJ
/TT6 1 Tf
44.1044 0 TD
[(Pr)38.9(oc. W)94.6(ork-)]TJ
-44.1044 -1.2222 TD
[(shop on Scalable Shar)49.5(ed Memory Multipr)47.1(ocessors)]TJ
/TT2 1 Tf
20.1456 0 TD
(, 1991. Extended version is MIT/LCS/TM-454.)Tj
-22.5456 -1.6667 TD
-0.0222 Tw
[(Anderson, T)81.2(.E., Levy)70(, H.M., Bershad, B.N., and Lazowska, E.D., ìThe Interaction of Architecture and Operating System Design,î)]TJ
/TT6 1 Tf
2.4 -1.2222 TD
0 Tw
[(Pr)38.9(oc. 5th Symposium on Ar)50.2(chitectural Support for Pr)50.5(ogramming Languages and Operating Systems)]TJ
/TT2 1 Tf
40.0544 0 TD
(, pp. 108-120, Santa)Tj
-40.0544 -1.2222 TD
(Clara, CA, Oct. 1992.)Tj
-2.4 -1.6667 TD
[(Baker)43.3(, M., Asami, S., Deprit, E., Ousterhout, J., Seltzer)66.6(, M., ìNon-V)137(olatile Memory for Fast, Reliable File Systems,î)]TJ
/TT6 1 Tf
46.9989 0 TD
[(Pr)37.8(oc. 5th)]TJ
-44.5989 -1.2222 TD
[(Symposium on Ar)47.4(chitectural Support for Pr)50.5(ogramming Languages and Operating Systems)]TJ
/TT2 1 Tf
36.1244 0 TD
(, pp. 10-22, Oct. 1992.)Tj
-38.5244 -1.6667 TD
-0.0122 Tw
(Bershad, B.N., ìThe Increasing Irrelevance of IPC Performance for Microkernel-Based Operating Systems,î)Tj
/TT6 1 Tf
43.5289 0 TD
[(Pr)38.9(oc. USENIX W)99.6(ork-)]TJ
-41.1289 -1.2222 TD
0 Tw
[(shop on Micr)44.1(okernels and Other Kernel Ar)53.5(chitectur)40.9(es)]TJ
/TT2 1 Tf
21.5233 0 TD
[(, pp. 205-21)44.1(1, Seattle, W)117.3(A, April 1992.)]TJ
-23.9233 -1.6667 TD
[(Bershad, B.N., Anderson, T)89.5(.E., Lazowska, E.D., and Levy)81.6(, H.M., ìLightweight Remote Procedure Call,î)]TJ
/TT6 1 Tf
42.1844 0 TD
[(Pr)38.9(oc. 12th Symposium)]TJ
-39.7844 -1.2222 TD
(on Operating Systems Principles)Tj
/TT2 1 Tf
13.12 0 TD
[(, pp. 102-1)43(13, Litch)]TJ
/TT9 1 Tf
7.9004 0 TD
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
(eld Park, AZ, Dec. 1989.)Tj
ET
endstream
endobj
19 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
21 0 obj
<<
/Length 7931
>>
stream
BT
/TT2 1 Tf
10 0 0 10 303.5 36 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(5)Tj
9 0 0 9 72 714 Tm
[(Biagioni, E., Cooper)50.1(, E., and Sansom, R., ìDesigning a Practical A)135.2(TM LAN,î)]TJ
/TT6 1 Tf
31.4133 0 TD
(IEEE Network)Tj
/TT2 1 Tf
5.7967 0 TD
[(, V)131.1(ol. 7, No. 2, pp. 32-39, Mar)70.1(. 1993.)]TJ
-37.21 -1.6667 TD
[(Custer)43.1(, H., ìInside W)48.2(indows NT)81.1(,î Microsoft Press, Redmond, W)128.2(A, 1993.)]TJ
T*
[(Dally)67.2(, W)93.8(.J., Chao, L., Chien, A., Hassoun, S., Horwat, W)119.5(., Kaplan, J., Song, P)122.5(., T)72(otty)66.8(, B., and W)45.8(ills, S., ìArchitecture of a M)]TJ
49.7391 0 TD
(es-)Tj
-47.3391 -1.2222 TD
[(sage-Driven Processor)52.7(,î)]TJ
/TT6 1 Tf
9.9156 0 TD
[(Pr)38.9(oc. 14th Annual International Symposium on Computer Ar)68.4(chitectur)40.9(e)]TJ
/TT2 1 Tf
28.2922 0 TD
[(, pp. 189-196, Pittsbur)30.4(gh,)]TJ
-38.2078 -1.2222 TD
[(P)92.8(A, Jun. 1987.)]TJ
-2.4 -1.6667 TD
-0.0211 Tw
[(Druschel, P)117.1(., and Peterson, L.L., ìHigh-Performance Cross-Domain Data T)65.1(ransfer)44.8(,î Dept. of Computer Science, Univ)80.7(. of Arizona,)]TJ
2.4 -1.2222 TD
0 Tw
[(TR 92-1)42(1, Mar)58.2(. 1992.)]TJ
-2.4 -1.6667 TD
[(Henry)67.9(, D.S., and Joer)27.1(g, C.F)84.3(., ìA T)38(ightly-Coupled Processor)33.4(-Network Interface,î)]TJ
/TT6 1 Tf
32.3967 0 TD
[(Pr)37.8(oc. 5th Symposium on Ar)51.3(chitectural Support)]TJ
-29.9967 -1.2222 TD
[(for Pr)40.3(ogramming Languages and Operating Systems)]TJ
/TT2 1 Tf
21.1278 0 TD
[(, pp. 1)41.1(1)37.8(1-122, Boston, MA, Oct. 1992.)]TJ
-23.5278 -1.6667 TD
-0.0278 Tw
(Hildebrand, D., ìAn Architectural Overview of QNX,î)Tj
/TT6 1 Tf
22.0689 0 TD
[(Pr)37.8(oc. USENIX W)100.7(orkshop on Micr)48.2(okernels and Other Kernel Ar)54.6(chitectur)40.9(es)]TJ
/TT2 1 Tf
29.46 0 TD
0 Tw
(,)Tj
-49.1289 -1.2222 TD
[(Seattle, W)116.1(A, Apr)58.5(. 1992.)]TJ
-2.4 -1.6667 TD
-0.0222 Tw
[(Johnson, D.B., and Zwaenepoel, W)111.4(., ìThe Peregrine High-Performance RPC System,î)]TJ
/TT6 1 Tf
34.6311 0 TD
[(Softwar)40.7(e Practice and Experience)]TJ
/TT2 1 Tf
13.57 0 TD
[(, V)131.1(ol. 23,)]TJ
-45.8011 -1.2222 TD
0 Tw
(No. 2, pp. 201-221, Feb. 1993.)Tj
-2.4 -1.6667 TD
[(Kane, G., and Heinrich, J., ìMIPS RISC Architecture,î Prentice Hall, Englewood Clif)63.2(fs, NJ, 1992.)]TJ
T*
[(Kar)20.1(ger)41.3(, P)112.8(.A., ìUsing Registers to Optimize Cross-Domain Call Performance,î)]TJ
/TT6 1 Tf
31.1989 0 TD
[( Pr)37.8(oc. 3r)40.8(d Symposium on Ar)48.5(chitectural Support for)]TJ
-28.7989 -1.2222 TD
[(Pr)38.9(ogramming Languages and Operating Systems Principles)]TJ
/TT2 1 Tf
24.0678 0 TD
[(, pp. 194-204, Boston, MA, Apr)73.5(. 1989.)]TJ
-26.4678 -1.6667 TD
[(Leiserson, C.E., Abuhamdeh, Z.S., Douglas, D.C., Feynman, C.R., Ganmukhi, M.N., Hill, J.V)180.3(., Hillis, W)97.6(.D., Kuszmaul, B.C., St.)]TJ
2.4 -1.2222 TD
[(Pierre, M.A., W)88.4(ells, D.S., W)87.5(ong, M.C., Y)107.2(ang, S., and Zak, R., ìThe Network Architecture of the Connection Machine CM-)]TJ
T*
(5,î November 1992. An early version appeared in)Tj
/TT6 1 Tf
20.1889 0 TD
[(Pr)38.9(oc. 1992 Symposium on Parallel Algorithms and Ar)64.5(chitectur)40.9(es)]TJ
/TT2 1 Tf
25.9622 0 TD
(.)Tj
-48.5511 -1.6667 TD
-0.0067 Tw
[(Mowry)68.8(, T)76.4(.C., Lam, M.S., and Gupta, A., ìDesign and Evaluation of a Compiler Algorithm for Prefetching,î)]TJ
/TT6 1 Tf
43.2933 0 TD
[(Pr)37.8(oc. 5th Symposium)]TJ
-40.8933 -1.2222 TD
0 Tw
[(on Ar)40(chitectural Support for Pr)50.5(ogramming Languages and Operating Systems)]TJ
/TT2 1 Tf
31.3267 0 TD
(, pp. 62-73, Boston, MA, Oct. 1992.)Tj
-33.7267 -1.6667 TD
[(Nagle, D., Uhlig, R., Stanley)79.8(, T)75.3(., Sechrest, S., Mudge, T)87.7(., and Brown, R.,îDesign T)49.6(radeof)21.5(fs for Software-Managed TLBs,î)]TJ
/TT6 1 Tf
49.2678 0 TD
[(Pr)37.8(oc.)]TJ
-46.8678 -1.2222 TD
[(20th Annual International Symposium on Computer Ar)66.8(chitectur)40.9(e)]TJ
/TT2 1 Tf
25.8889 0 TD
(, pp. 27-38, San Diego, CA, May 1993.)Tj
-28.2889 -1.6667 TD
-0.0278 Tw
[(Nuth, P)116.2(., and Dally)71.1(, W)93.8(., ìA Mechanism for Ef)]TJ
/TT9 1 Tf
18.0711 0 TD
0 Tw
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
-0.0278 Tw
(cient Context Switching,î)Tj
/TT6 1 Tf
10.5105 0 TD
[(Pr)37.8(oc. International Confer)50.1(ence on Computer Design)]TJ
/TT2 1 Tf
20.9211 0 TD
(, pp.)Tj
-47.6589 -1.2222 TD
0 Tw
(301-304, Cambridge, MA, Oct. 1991.)Tj
-2.4 -1.6667 TD
(Pu, C., Massalin, H., and Ioannidis, J., ìThe Synthesis Kernel,î)Tj
/TT6 1 Tf
25.5733 0 TD
(Computing Systems)Tj
/TT2 1 Tf
7.85 0 TD
[(, V)131.1(ol. 1, No. 1, pp. 1)46.7(1-32, W)44.6(inter 1988.)]TJ
-33.4233 -1.6667 TD
(Rosenblum, M., and Ousterhout, J.K., ìThe Design and Implementation of a Log-structured File System,î)Tj
/TT6 1 Tf
42.6578 0 TD
[(ACM T)58.1(ransactions on)]TJ
-40.2578 -1.2222 TD
(Computer Systems)Tj
/TT2 1 Tf
7.4056 0 TD
[(, V)131.1(ol. 10, No. 1, pp. 26-52, Feb. 1992.)]TJ
-9.8056 -1.6667 TD
[(Rozier)43.3(, M., Abrossimov)75(, V)131.1(., Armand, F)86.3(., Boule, I., Gien, M., Guillemont, M., Herrmann, F)107.8(., Kaiser)44.3(, C., Langlois, S., Leonard, P)]TJ
50.9633 0 TD
(.,)Tj
-48.5633 -1.2222 TD
[(and Neuhauser)47.5(, W)93.8(., ìChorus Distributed Operating System,î)]TJ
/TT6 1 Tf
24.4689 0 TD
(Computing Systems)Tj
/TT2 1 Tf
7.85 0 TD
[(, V)131.1(ol. 1, No. 4, pp. 305-370, Fall 1988.)]TJ
-34.7189 -1.6667 TD
-0.0244 Tw
[(Soundararajan, V)69.8(ijayaraghavan, ìDribble-Back Registers: A T)93.3(echnique for Latency T)82(olerance in Multiprocessors,î MIT/LCS/TM-)]TJ
2.4 -1.2222 TD
0 Tw
(474, Oct. 1992.)Tj
-2.4 -1.6667 TD
[(SP)93.4(ARC International, ìSP)104.5(ARC-V9 Architecture Speci)]TJ
/TT9 1 Tf
21.7156 0 TD
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
[(cationî, Release R1.2, Nov)94.2(. 2, 1992.)]TJ
-22.2718 -1.6667 TD
[(T)70.8(anenbaum, A.S., van Renesse, R., van Staveren, H., Sharp, G., Mullender)79.5(, S.J., Jansen, A., van Rossum, G., ìExperiences with)]TJ
2.4 -1.2222 TD
(the Amoeba Distributed Operating System,î)Tj
/TT6 1 Tf
17.9733 0 TD
(Communications of the ACM)Tj
/TT2 1 Tf
11.6222 0 TD
[(, V)131.1(ol. 12, No. 33, pp. 46-63, Dec. 1990.)]TJ
-31.9956 -1.6667 TD
[(Thekkath, C.A., and Levy)78.5(, H.M., ìLimits to Low-Latency Communication on High-Speed Networks,î)]TJ
/TT6 1 Tf
41.1789 0 TD
[(ACM T)59.2(ransactions on)]TJ
-38.7789 -1.2222 TD
(Computer Systems)Tj
/TT2 1 Tf
7.4056 0 TD
[(, V)131.1(ol. 1)38.9(1, No. 2, pp. 179-203, May 1993.)]TJ
-9.8056 -1.6667 TD
[(Thekkath, C.A, Levy)75.8(, H.M., and Lazowska, E.D., ìEf)]TJ
/TT9 1 Tf
21.4378 0 TD
(ﬁ)Tj
/TT2 1 Tf
0.5562 0 TD
[(cient Support for Multicomputing on A)132.5(TM Networks,î Dept. of Computer)]TJ
-19.5939 -1.2222 TD
[(Science and Engineering, University of W)101.2(ashington, T)76.2(echnical Report 93-04-03, Apr)71.7(. 1993.)]TJ
-2.4 -1.6667 TD
-0.0022 Tw
[(von Eicken, T)81.7(., Culler)44(, D.E., Goldstein, S.C., and Schauser)63(, K.E., ìActive Messages: a Mechanism for Integrated Communication)]TJ
2.4 -1.2222 TD
-0.0333 Tw
(and Computation,î)Tj
/TT6 1 Tf
7.7844 0 TD
[(Pr)38.9(oc. 19th International Symposium on Computer Ar)62(chitectur)40.9(e)]TJ
/TT2 1 Tf
24.96 0 TD
(, pp. 256-266, Gold Coast, Australia, May)Tj
-32.7444 -1.2222 TD
0 Tw
(1992.)Tj
-2.4 -1.6667 TD
[(W)81.6(aldspur)21.6(ger)41.3(, W)93.8(., and W)84.4(eihl, W)95.6(.E., ìRegister Relocation: Flexible Contexts for Multithreading,î)]TJ
/TT6 1 Tf
38.6778 0 TD
[(Pr)37.8(oc. 20th Annual International)]TJ
-36.2778 -1.2222 TD
[(Symposium on Computer Ar)53(chitectur)40.9(e)]TJ
/TT2 1 Tf
15.2089 0 TD
(, pp. 120-130, San Diego, CA, May 1993.)Tj
-17.6089 -1.6667 TD
[(W)81.6(elch, B., ìThe File System Belongs in the Kernel,î)]TJ
/TT6 1 Tf
21.36 0 TD
[(Pr)37.8(oc. 2nd USENIX Mach Symposium)]TJ
/TT2 1 Tf
14.9122 0 TD
[(, pp. 233-250, Nov)75.2(. 1991.)]TJ
-36.2722 -1.6667 TD
[(Y)101.1(arvin, C., Bukowski, R., and Anderson, T)96.6(., ìAnonymous RPC: Low-Latency Protection in a 64-Bit Address Space,î)]TJ
/TT6 1 Tf
47.2556 0 TD
[(Pr)37.8(oc. Sum-)]TJ
-44.8556 -1.2222 TD
[(mer 1993 USENIX Confer)51.3(ence)]TJ
/TT2 1 Tf
12.3044 0 TD
(, pp. 175-186, Cincinnati, OH, Jun. 1993.)Tj
ET
endstream
endobj
22 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT6 6 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
9 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
23 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
24 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 676
/Descent -250
/Flags 262178
/FontBBox [-168 -218 1000 935]
/FontName /Times-Bold
/ItalicAngle 0
/StemV 133
/XHeight 461
/StemH 139
>>
endobj
25 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 653
/Descent -250
/Flags 98
/FontBBox [-169 -217 1010 883]
/FontName /Times-Italic
/ItalicAngle -15
/StemV 76
/XHeight 441
/StemH 76
>>
endobj
26 0 obj
<<
/Type /FontDescriptor
/Ascent 701
/CapHeight 0
/Descent -298
/Flags 32
/FontBBox [-167 -299 1094 827]
/FontName /Symbol
/ItalicAngle 0
/StemV 0
>>
endobj
27 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 148
/Widths [250 0 0 0 500 0 0 0 333 333 0 0 250 333 250 278 
500 500 500 500 500 500 500 500 500 500 278 278 0 0 0 0 
0 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 
556 722 667 556 611 722 722 944 722 722 611 333 0 333 0 0 
0 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 
500 500 333 389 278 500 500 722 500 500 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 333 444 444 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Roman
/FontDescriptor 23 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 122
/Widths [250 0 0 0 0 0 0 0 0 0 0 0 0 333 250 0 
0 500 500 500 500 0 0 0 0 0 333 0 0 0 0 0 
0 722 0 722 722 0 0 778 778 389 0 0 0 944 722 0 
611 0 722 556 667 0 0 1000 0 0 0 0 0 0 0 0 
0 500 556 444 556 444 333 500 556 278 0 556 278 833 556 500 
556 556 444 389 333 556 500 722 0 500 444 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Bold
/FontDescriptor 24 0 R
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 125
/Widths [250 0 0 0 0 0 0 0 333 333 0 0 250 333 250 0 
500 500 500 500 500 500 500 0 500 500 0 0 0 0 0 0 
920 611 0 667 722 611 0 0 0 333 0 667 556 833 667 722 
611 0 0 500 556 722 0 833 611 0 0 0 0 0 0 0 
0 500 500 444 500 444 278 500 500 278 0 444 278 722 500 500 
500 500 389 389 278 500 444 667 444 444 0 400 0 400 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Italic
/FontDescriptor 25 0 R
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 181
/LastChar 181
/Widths [576 ]
/Encoding /WinAnsiEncoding
/BaseFont /Symbol
/FontDescriptor 26 0 R
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 222
/LastChar 223
/Widths [556 556 ]
/Encoding /MacRomanEncoding
/BaseFont /Times-Roman
/FontDescriptor 27 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
11 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 13 0 R
/Contents 12 0 R
>>
endobj
14 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 16 0 R
/Contents 15 0 R
>>
endobj
17 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 19 0 R
/Contents 18 0 R
>>
endobj
20 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 22 0 R
/Contents 21 0 R
>>
endobj
28 0 obj
<<
/S /D
>>
endobj
29 0 obj
<<
/Nums [0 28 0 R ]
>>
endobj
10 0 obj
<<
/Type /Pages
/Kids [1 0 R 11 0 R 14 0 R 17 0 R 20 0 R]
/Count 5
/MediaBox [0 0 612 792]
>>
endobj
30 0 obj
<<
/CreationDate (D:20190823235800+01'00')
/ModDate (D:20190823235800+01'00')
/Producer (PSNormalizer.framework)
>>
endobj
31 0 obj
<<
/Type /Catalog
/Pages 10 0 R
/PageLabels 29 0 R
>>
endobj
xref
0 32
0000000000 65535 f 
0000033868 00000 n 
0000000016 00000 n 
0000004733 00000 n 
0000032056 00000 n 
0000032615 00000 n 
0000033056 00000 n 
0000033530 00000 n 
0000033694 00000 n 
0000030954 00000 n 
0000034353 00000 n 
0000033949 00000 n 
0000004872 00000 n 
0000011007 00000 n 
0000034033 00000 n 
0000011125 00000 n 
0000016448 00000 n 
0000034117 00000 n 
0000016566 00000 n 
0000022723 00000 n 
0000034201 00000 n 
0000022852 00000 n 
0000030836 00000 n 
0000031094 00000 n 
0000031291 00000 n 
0000031493 00000 n 
0000031693 00000 n 
0000031859 00000 n 
0000034285 00000 n 
0000034313 00000 n 
0000034463 00000 n 
0000034595 00000 n 
trailer
<<
/Size 32
/Root 31 0 R
/Info 30 0 R
/ID [<a031b197ce661f4490dc6151c37424d9><a031b197ce661f4490dc6151c37424d9>]
>>
startxref
34665
%%EOF
